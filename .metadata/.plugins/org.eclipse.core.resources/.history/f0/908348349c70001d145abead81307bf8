/*
 * input_processing.c
 *
 *  Created on: Nov 30, 2022
 *      Author: HELLO SON
 */
#include "input_processing.h"
#include "input_reading.h"
#include "timer.h"
#include "main.h"

#define RED 0
#define GREEN 1

#define button1 0
#define button2 1
#define button3 2
#define pes_but 3

#define AUTO_RED 0
#define AUTO_GREEN 1
#define off 10
static uint8_t lightbufferMod[2]={1,1};
static uint8_t lightbufferRun[2]={5,3};
int status_1;
int status_2;
int pes_1;
int pes_2;
int time1;
int time2;
int mode;
void initial()
{
	status_1=AUTO_RED;
	status_2=AUTO_GREEN;
	pes_1=off;
	pes_2=off;
	mode=1;
	time1=lightbufferRun[AUTO_RED];
	time2=lightbufferRun[AUTO_GREEN];
	setTimerRun(1000);
}

void traffic()
{
	if(status_1==AUTO_RED)
	{
		HAL_GPIO_WritePin(Traffic_1_RED_GPIO_Port, Traffic_1_RED_Pin, RESET);
		HAL_GPIO_WritePin(Traffic_1_GREEN_GPIO_Port, Traffic_1_GREEN_Pin, SET);
		if(time1==0)
		{
			status_1=AUTO_GREEN;
			HAL_GPIO_WritePin(Traffic_1_RED_GPIO_Port, Traffic_1_RED_Pin, SET);
			HAL_GPIO_WritePin(Traffic_1_GREEN_GPIO_Port, Traffic_1_GREEN_Pin, RESET);
			time1=lightbufferRun[AUTO_GREEN];
		}
	}
	else if(status_1==AUTO_GREEN)
	{
		HAL_GPIO_WritePin(Traffic_1_RED_GPIO_Port, Traffic_1_RED_Pin, SET);
		HAL_GPIO_WritePin(Traffic_1_GREEN_GPIO_Port, Traffic_1_GREEN_Pin, RESET);
		if(time2==0)
		{
			status_1=AUTO_RED;
			HAL_GPIO_WritePin(Traffic_1_RED_GPIO_Port, Traffic_1_RED_Pin, RESET);
			HAL_GPIO_WritePin(Traffic_1_GREEN_GPIO_Port, Traffic_1_GREEN_Pin, SET);
			time1=lightbufferRun[AUTO_RED];
		}
	}
	if(status_2==AUTO_RED)
	{
		HAL_GPIO_WritePin(Traffic_2_RED_GPIO_Port, Traffic_2_RED_Pin, RESET);
		HAL_GPIO_WritePin(Traffic_2_GREEN_GPIO_Port, Traffic_2_GREEN_Pin, SET);
		if(time2==0)
		{
			status_2=AUTO_GREEN;
			HAL_GPIO_WritePin(Traffic_2_RED_GPIO_Port, Traffic_2_RED_Pin, SET);
			HAL_GPIO_WritePin(Traffic_2_GREEN_GPIO_Port, Traffic_2_GREEN_Pin, RESET);
			time2=lightbufferRun[AUTO_GREEN];
		}
	}
	else if(status_2==AUTO_GREEN)
	{
		HAL_GPIO_WritePin(Traffic_2_RED_GPIO_Port, Traffic_2_RED_Pin, SET);
		HAL_GPIO_WritePin(Traffic_2_GREEN_GPIO_Port, Traffic_2_GREEN_Pin, RESET);
		if(time2==0)
		{
			status_2=AUTO_RED;
			HAL_GPIO_WritePin(Traffic_2_RED_GPIO_Port, Traffic_2_RED_Pin, RESET);
			HAL_GPIO_WritePin(Traffic_2_GREEN_GPIO_Port, Traffic_2_GREEN_Pin, SET);
			time2=lightbufferRun[AUTO_RED];
		}
	}
}
void updateMode()
{
	mode++;
	if(mode>3)
	{
		mode=1;
	}
}

